# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  schedule:
    - cron: 0 12,17,23 * * 
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: Android Emulator Runner
        # You may pin to the exact commit or the version.
        # uses: ReactiveCircus/android-emulator-runner@5de26e4bd23bf523e8a4b7f077df8bfb8e52b50e
        uses: ReactiveCircus/android-emulator-runner@v2.19.1
        with:
          # API level of the platform and system image - e.g. 23 for Android Marshmallow, 29 for Android 10
          api-level: 23
          # CPU architecture of the system image - x86, x86_64 or arm64-v8a
          arch: x86_64
          # A custom working directory - e.g. `./android` if your root Gradle project is under the `./android` sub-directory within your repository
          #working-directory: # optional
          script: ./gradlew connectedCheck
          
